package amberdb.v2.model.mapper;

import amberdb.v2.model.EADWork;
import org.skife.jdbi.v2.StatementContext;
import org.skife.jdbi.v2.tweak.ResultSetMapper;

import java.sql.ResultSet;
import java.sql.SQLException;

public class EADWorkMapper implements ResultSetMapper<EADWork> {
    @Override
    public EADWork map(int index, ResultSet r, StatementContext ctx) throws SQLException {
        return new EADWork(r.getInt("id"),
                r.getInt("txn_start"),
                r.getInt("txn_end"),
                r.getString("extent"),
                r.getDate("dcmDateTimeUpdated"),
                r.getString("localSystemNumber"),
                r.getString("occupation"),
                r.getBoolean("materialFromMultipleSources"),
                r.getString("encodingLevel"),
                r.getDate("endDate"),
                r.getBoolean("displayTitlePage"),
                r.getString("subject"),
                r.getBoolean("sendToIlms"),
                r.getBoolean("allowOnsiteAccess"),
                r.getString("language"),
                r.getString("sensitiveMaterial"),
                r.getString("repository"),
                r.getString("holdingId"),
                r.getString("arrangement"),
                r.getString("dcmAltPi"),
                r.getString("folderNumber"),
                r.getString("collectionNumber"),
                r.getString("west"),
                r.getString("totalDuration"),
                r.getBoolean("workCreatedDuringMigration"),
                r.getString("relatedMaterial"),
                r.getDate("dcmDateTimeCreated"),
                r.getString("findingAidNote"),
                r.getString("collection"),
                r.getString("dcmWorkPid"),
                r.getString("otherTitle"),
                r.getString("classification"),
                r.getString("commentsInternal"),
                r.getString("immutable"),
                r.getString("folder"),
                r.getString("copyrightPolicy"),
                r.getString("nextStep"),
                r.getString("publisher"),
                r.getString("subType"),
                r.getString("copyingPublishing"),
                r.getString("scaleEtc"),
                r.getDate("startDate"),
                r.getString("tempHolding"),
                r.getString("dcmRecordUpdater"),
                r.getString("access"),
                r.getBoolean("allowHighResdownload"),
                r.getString("south"),
                r.getBoolean("isMissingPage"),
                r.getString("restrictionsOnAccess"),
                r.getString("north"),
                r.getString("scopeContent"),
                r.getString("representativeId"),
                r.getString("standardId"),
                r.getString("accessConditions"),
                r.getString("title"),
                r.getString("internalAccessConditions"),
                r.getString("eadUpdateReviewRequired"),
                r.getString("subUnitNo"),
                r.getDate("expiryDate"),
                r.getBoolean("australianContent"),
                r.getDate("digitalStatusDate"),
                r.getString("east"),
                r.getString("bibliography"),
                r.getString("contributor"),
                r.getString("provenance"),
                r.getBoolean("moreIlmsDetailsRequired"),
                r.getString("subUnitType"),
                r.getString("rights"),
                r.getString("uniformTitle"),
                r.getString("rdsAcknowledgementType"),
                r.getString("alias"),
                r.getString("recordSource"),
                r.getString("dateRangeInAS"),
                r.getString("coverage"),
                r.getString("bibId"),
                r.getString("summary"),
                r.getString("creator"),
                r.getString("preferredCitation"),
                r.getString("coordinates"),
                r.getString("creatorStatement"),
                r.getString("folderType"),
                r.getString("bibLevel"),
                r.getString("carrier"),
                r.getString("holdingNumber"),
                r.getString("form"),
                r.getString("series"),
                r.getString("rdsAcknowledgementReceiver"),
                r.getString("constraint1"),
                r.getString("digitalStatus"),
                r.getString("dcmRecordCreator"));
    }
}
